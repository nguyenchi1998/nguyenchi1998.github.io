{"version":3,"sources":["hooks/useNotification.js","../node_modules/@material-ui/icons/LockOutlined.js","../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","components/Form/WithFormWrapper.jsx","containers/Auth/SignInPage.jsx"],"names":["useNotification","useSnackbar","enqueueSnackbar","closeSnackbar","variant","message","key","Date","now","onClick","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","FormControlLabel","React","props","ref","checked","classes","className","control","disabledProp","disabled","label","inputRef","_props$labelPlacement","labelPlacement","other","name","onChange","_objectWithoutProperties","muiFormControl","useFormControl","controlProps","forEach","_extends","clsx","root","concat","capitalize","Typography","component","withStyles","theme","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","color","palette","text","SwitchBase","autoFocus","checkedProp","checkedIcon","defaultChecked","icon","id","inputProps","onBlur","onFocus","readOnly","required","tabIndex","type","_useControlled","useControlled","controlled","Boolean","state","_useControlled2","_slicedToArray","setCheckedState","hasLabelFor","IconButton","role","undefined","event","input","newChecked","target","padding","position","opacity","width","height","top","left","margin","zIndex","createSvgIcon","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","_props$color","_props$icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","_props$size","size","fontSize","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","WithFormWrapper","children","useState","currentValues","setCurrentValues","e","SignInStyle","makeStyles","paper","marginTop","spacing","avatar","form","submit","SignIn","isLoading","setIsLoading","errorMessage","setErrorMessage","history","useHistory","notify","onSubmit","credential","a","signIn","then","push","PATHS","HOME_PAGE","catch","err","response","data","status","UNAUTHORIZED","detail","goSignUp","SIGN_UP_PAGE","register","useForm","mode","reValidateMode","criteriaMode","Container","maxWidth","LoadingIndicator","CssBaseline","Avatar","TextField","fullWidth","autoComplete","Button","email","password","Grid","container","item","Box","ml","style"],"mappings":"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","file":"static/js/8.1c6a5935.chunk.js","sourcesContent":["import { useSnackbar } from 'notistack';\n\nconst useNotification = () => {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  return (variant = 'success', message = '') => {\n    const key = enqueueSnackbar(message, {\n      variant,\n      key: Date.now(),\n      onClick: () => {\n        closeSnackbar(key);\n      },\n    });\n  };\n};\n\nexport default useNotification;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"\n}), 'LockOutlined');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React, { useState } from 'react';\n\nconst WithFormWrapper = ({ children }) => {\n  const [currentValues, setCurrentValues] = useState({});\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setCurrentValues({ ...currentValues, [name]: value });\n  };\n\n  return <>{children({ onChange, currentValues })}</>;\n};\n\nexport default WithFormWrapper;\n","import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { Box, makeStyles } from '@material-ui/core';\nimport WithFormWrapper from 'components/Form/WithFormWrapper';\nimport { signIn } from 'services/auth';\nimport { useHistory } from 'react-router-dom';\nimport { PATHS } from 'router/paths';\nimport { UNAUTHORIZED } from 'config/API_CODES';\nimport useNotification from 'hooks/useNotification';\nimport LoadingIndicator from 'components/LoadingIndicator';\nimport { useForm } from 'react-hook-form';\n\nconst SignInStyle = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn() {\n  const classes = SignInStyle();\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const history = useHistory();\n\n  const notify = useNotification();\n\n  const onSubmit = async (credential) => {\n    setIsLoading(true);\n    signIn(credential)\n      .then(() => {\n        history.push(PATHS.HOME_PAGE);\n      })\n      .catch((err) => {\n        setIsLoading(false);\n        if (err.response) {\n          const { data, status } = err.response;\n          if (status === UNAUTHORIZED) {\n            setErrorMessage(data.detail);\n          }\n          notify('fail', errorMessage);\n        }\n      });\n  };\n\n  const goSignUp = () => {\n    history.push(PATHS.SIGN_UP_PAGE);\n  };\n\n  const { register } = useForm({\n    mode: 'onChange',\n    reValidateMode: 'onChange',\n    criteriaMode: 'all',\n  });\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      {isLoading ? (\n        <LoadingIndicator />\n      ) : (\n        <>\n          <CssBaseline />\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n            </Typography>\n            <WithFormWrapper>\n              {({ onChange, currentValues }) => (\n                <>\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    fullWidth\n                    inputRef={register({\n                      required: 'Required',\n                    })}\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    autoFocus\n                    onChange={onChange}\n                  />\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"current-password\"\n                    onChange={onChange}\n                  />\n\n                  <FormControlLabel\n                    control={<Checkbox value=\"remember\" color=\"primary\" />}\n                    label=\"Remember me\"\n                  />\n                  <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                    onClick={() =>\n                      onSubmit({ email: 'chi@gmail.com', password: 'aaaaaaaa' })\n                    }\n                  >\n                    Sign In\n                  </Button>\n                </>\n              )}\n            </WithFormWrapper>\n            <Grid container>\n              <Grid item>\n                <Box display=\"inline-block\" ml={1}>\n                  <Typography\n                    color=\"primary\"\n                    style={{ cursor: 'pointer' }}\n                    onClick={goSignUp}\n                  >\n                    Forgot password?\n                  </Typography>\n                </Box>\n              </Grid>\n              <Grid item>\n                <Box display=\"inline-block\" ml={1}>\n                  <Typography\n                    color=\"primary\"\n                    style={{ cursor: 'pointer' }}\n                    onClick={goSignUp}\n                  >\n                    Don&apos; t have an account? Sign Up\n                  </Typography>\n                </Box>\n              </Grid>\n            </Grid>\n          </div>\n        </>\n      )}\n    </Container>\n  );\n}\n"],"sourceRoot":""}